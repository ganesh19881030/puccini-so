version: "1.0"
metadata:
    puccini-js:
        concat: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.3.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.3.1

            function evaluate() {
              var a = [];
              var length = arguments.length;
              for (var i = 0; i < length; i++) {
                var argument = arguments[i];
                if (argument.$string !== undefined)
                  argument = argument.$string;
                a.push(argument);
              }
              return a.join('');
            }
        equal: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v1, v2) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              return tosca.getComparable(v1) == tosca.getComparable(v2);
            }
        get_artifact: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.8.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.8.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.8.1

            function evaluate() {
              return 'TODO';
            }
        get_attribute: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.5.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.5.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.5.1

            clout.exec('tosca.helpers');

            function evaluate(entity, attribute) {
              var length = arguments.length;
              if (length < 2)
                throw 'must have at least 2 arguments';
              var nodeTemplate = tosca.getNodeTemplate(entity);
              var attributes = nodeTemplate.attributes;
              if (!(attribute in attributes))
                throw puccini.sprintf('attribute "%s" not found in "%s"', attribute, nodeTemplate.name);
              var r = clout.coerce(attributes[attribute]);
              for (var i = 2; i < length; i++)
                r = r[arguments[i]];
              return r;
            }
        get_input: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.4.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.4.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.4.1

            clout.exec('tosca.helpers');

            function evaluate(input) {
              if (arguments.length !== 1)
                throw 'must have 1 argument';
              if (!tosca.isTosca(clout))
                throw 'Clout is not TOSCA';
              var inputs = clout.properties.tosca.inputs;
              if (!(input in inputs))
                throw puccini.sprintf('input "%s" not found', input);
              var r = inputs[input];
              r = clout.coerce(r);
              return r;
            }
        get_nodes_of_type: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.7.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.7.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.7.1

            clout.exec('tosca.helpers');

            function evaluate(typeName) {
              if (arguments.length !== 1)
                throw 'must have 1 argument';
              var names = [];
              for (var name in clout.vertexes) {
                var vertex = clout.vertexes[name];
                if (tosca.isTosca(vertex))
                  names.push(vertex.properties.name);
              }
              return names;
            }
        get_operation_output: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.6.1
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.6.1
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.6.1

            function evaluate() {
              return 'TODO';
            }
        get_property: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.4.2
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.4.2
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.4.2

            clout.exec('tosca.helpers');

            function evaluate(entity, property) {
              var length = arguments.length;
              if (length < 2)
                throw 'must have at least 2 arguments';
              var nodeTemplate = tosca.getNodeTemplate(entity);
              var properties = nodeTemplate.properties;
              if (!(property in properties))
                throw puccini.sprintf('property "%s" not found in "%s"', property, nodeTemplate.name);
              var r = clout.coerce(properties[property]);
              for (var i = 2; i < length; i++)
                r = r[arguments[i]];
              return r;
            }
        greater_or_equal: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v1, v2) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              return tosca.getComparable(v1) >= tosca.getComparable(v2);
            }
        greater_than: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v1, v2) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              return tosca.getComparable(v1) > tosca.getComparable(v2);
            }
        in_range: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v, lower, upper) {
              if (arguments.length !== 3)
                throw 'must have 2 arguments';
              v = tosca.getComparable(v);
              return (v >= tosca.getComparable(lower)) && (v <= tosca.getComparable(upper));
            }
        join: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.2
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.3.2

            function evaluate() {
              var length = arguments.length;
              if ((length < 1) || (length > 2))
                throw 'must have 1 or 2 arguments';
              var delimiter = (length == 2) ? arguments[1] : '';
              var args = arguments[0];
              length = args.length;
              var a = [];
              for (var i = 0; i < length; i++) {
                var argument = args[i];
                if (argument.$string !== undefined)
                  argument = argument.$string;
                a.push(argument);
              }
              return a.join(delimiter);
            }
        length: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            function validate(v, length) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              if (v.$string !== undefined)
                v = v.$string;
              return v.length == length;
            }
        less_or_equal: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v1, v2) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              return tosca.getComparable(v1) <= tosca.getComparable(v2);
            }
        less_than: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            clout.exec('tosca.helpers');

            function validate(v1, v2) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              return tosca.getComparable(v1) < tosca.getComparable(v2);
            }
        max_length: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            function validate(v, length) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              if (v.$string !== undefined)
                v = v.$string;
              return v.length <= length;
            }
        min_length: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            function validate(v, length) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              if (v.$string !== undefined)
                v = v.$string;
              return v.length >= length;
            }
        pattern: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            function validate(v, re) {
              if (arguments.length !== 2)
                throw 'must have 1 argument';
              if (v.$string !== undefined)
                v = v.$string;
              return new RegExp('^' + re + '$').test(v);
            }
        schema: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3

            function validate() {
              // TODO
              return true;
            }
        token: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.3.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.3.2

            function evaluate(v, separators, index) {
              if (arguments.length !== 3)
                throw 'must have 3 arguments';
              if (v.$string !== undefined)
                v = v.$string;
              var s = v.split(new RegExp('[' + escape(separators) + ']'));
              return s[index];
            }

            function escape(s) {
              return s.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
            }
        tosca:
            coerce: |-
                clout.exec('tosca.utils');

                tosca.coerce();

                puccini.write(clout)
            helpers: |-
                var tosca = {};

                tosca.isTosca = function(o, kind) {
                  if (o.metadata['puccini-tosca'] !== undefined) {
                    o = o.metadata['puccini-tosca'];
                    if (o.version === '1.0') {
                      if (kind !== undefined)
                        return kind === o.kind;
                      return true;
                    }
                  }
                  return false;
                };

                tosca.isNodeTemplate = function(vertex, typeName) {
                  if (tosca.isTosca(vertex, 'nodeTemplate')) {
                    if (typeName !== undefined)
                      return typeName in vertex.properties.types;
                    return true;
                  }
                  return false;
                };

                tosca.getNodeTemplate = function(entity) {
                  var vertex;
                  switch (entity) {
                  case 'SELF':
                    vertex = site;
                    break;
                  case 'SOURCE':
                    vertex = source;
                    break;
                  case 'TARGET':
                    vertex = target;
                    break;
                  case 'HOST':
                    vertex = tosca.getHost(site);
                    break;
                  default:
                    for (var vertexId in clout.vertexes) {
                      var vertex = clout.vertexes[vertexId];
                      if (tosca.isNodeTemplate(vertex) && (vertex.properties.name === entity))
                        return vertex.properties;
                    }
                    throw puccini.sprintf('node template "%s" not found', entity);
                  }
                  if (!tosca.isTosca(vertex))
                    throw puccini.sprintf('node template "%s" not found', entity);
                  return vertex.properties;
                };

                tosca.getHost = function(vertex) {
                  for (var e = 0; e < vertex.edgesOut.length; e++) {
                    var edge = vertex.edgesOut[e];
                    if (tosca.isTosca(edge, 'relationship')) {
                      for (var typeName in edge.properties.types) {
                        var type = edge.properties.types[typeName];
                        if (type.metadata.role === 'host')
                          return edge.target;
                      }
                    }
                  }
                  return {};
                };

                tosca.getComparable = function(v) {
                  if ((v === undefined) || (v === null))
                    return null;
                  if (v.$number !== undefined)
                    return v.$number;
                  if (v.$string !== undefined)
                    return v.$string;
                  return v;
                };
            resolve: |-
                clout.exec('tosca.utils');

                // Remove existing relationships
                var nodeTemplateVertexes = [];
                for (var vertexId in clout.vertexes) {
                  var vertex = clout.vertexes[vertexId];
                  if (tosca.isNodeTemplate(vertex)) {
                    nodeTemplateVertexes.push(vertex);
                    for (var e = 0; e < vertex.edgesOut.length; e++) {
                      edge = vertex.edgesOut[e];
                      if (tosca.isTosca(edge, 'relationship'))
                        edge.remove();
                    }
                  }
                }

                // For consistent results, we will sort the node templates by name
                nodeTemplateVertexes.sort(function(a, b) {
                  return a.properties.name < b.properties.name ? -1 : 1;
                });

                tosca.toCoercibles();

                // Resolve all requirements
                for (var v = 0; v < nodeTemplateVertexes.length; v++) {
                  var vertex = nodeTemplateVertexes[v];
                  var nodeTemplate = vertex.properties;
                  var requirements = nodeTemplate.requirements;
                  for (var r = 0; r < requirements.length; r++) {
                    var requirement = requirements[r];
                    resolve(vertex, nodeTemplate, requirement);
                  }
                }

                // Check that all capabilities have their minimum relationship count
                for (var v = 0; v < nodeTemplateVertexes.length; v++) {
                  var vertex = nodeTemplateVertexes[v];
                  var nodeTemplate = vertex.properties;
                  var capabilities = nodeTemplate.capabilities;
                  for (var capabilityName in capabilities) {
                    var capability = capabilities[capabilityName];
                    var relationshipCount = countRelationships(vertex, capabilityName);
                    var minRelationshipCount = capability.minRelationshipCount;
                    if (relationshipCount < minRelationshipCount)
                      notEnoughRelationships(nodeTemplate.name, capabilityName, relationshipCount, minRelationshipCount)
                  }
                }

                tosca.unwrapCoercibles();

                puccini.write(clout)

                function resolve(sourceVertex, sourceNodeTemplate, requirement) {
                  var path = requirement.path;
                  var name = requirement.name;

                  var candidates = gatherCandidateNodeTemplates(sourceVertex, requirement);
                  if (candidates.length === 0) {
                    puccini.log.warningf(path, name, 'there are no candidate node templates');
                    return;
                  }

                  candidates = gatherCandidateCapabilities(requirement, candidates);
                  if (candidates.length === 0) {
                    puccini.log.warningf('%s: could not satisfy "%s" because no candidate node template provides required capability', path, name);
                    return;
                  }

                  // Gather priority candidates: those that have not yet fulfilled their minimum relationship count
                  var priorityCandidates = [];
                  for (var c = 0; c < candidates.length; c++) {
                    var candidate = candidates[c];
                    if ((candidate.capability.minRelationshipCount !== 0) && (countRelationships(candidate.vertex, candidate.capabilityName) < candidate.capability.minRelationshipCount))
                      priorityCandidates.push(candidate);
                  }

                  var chosen = null;

                  if (priorityCandidates.length !== 0)
                    // Of the priority candidates, pick the one with the highest minimum relationship count
                    // (needs to be fulfilled soonest)
                    for (var c = 0; c < priorityCandidates.length; c++) {
                      var candidate = priorityCandidates[c];
                      if ((chosen === null) || (candidate.capability.minRelationshipCount > chosen.capability.minRelationshipCount))
                        chosen = candidate;
                    }
                  else
                    // Of the candidates, pick the one with highest maximum relationship count
                    // (has the most room)
                    for (var c = 0; c < candidates.length; c++) {
                      candidate = candidates[c];
                      if ((chosen === null) || isMaxCountGreater(candidate.capability.maxRelationshipCount, chosen.capability.maxRelationshipCount))
                        chosen = candidate;
                    }

                  puccini.log.infof('{resolve} %s: satisfied "%s" with capability "%s" in node template "%s"', path, name, chosen.capabilityName, chosen.nodeTemplateName);
                  addRelationship(sourceVertex, requirement, chosen.vertex, chosen.capabilityName);
                }

                function gatherCandidateNodeTemplates(sourceVertex, requirement) {
                  var path = requirement.path;
                  var nodeTemplateName = requirement.nodeTemplateName;
                  var nodeTypeName = requirement.nodeTypeName;
                  var nodeTemplatePropertyConstraints = requirement.nodeTemplatePropertyConstraints;
                  var capabilityPropertyConstraintsMap = requirement.capabilityPropertyConstraints;

                  var candidates = [];
                  for (var v = 0; v < nodeTemplateVertexes.length; v++) {
                    var vertex = nodeTemplateVertexes[v];
                    var candidateNodeTemplate = vertex.properties;
                    var candidateNodeTemplateName = candidateNodeTemplate.name;

                    if ((nodeTemplateName !== '') && (nodeTemplateName !== candidateNodeTemplateName)) {
                      puccini.log.debugf('{resolve} %s: node template "%s" is not named "%s"', path, candidateNodeTemplateName, nodeTemplateName);
                      continue;
                    }

                    if ((nodeTypeName !== '') && !(nodeTypeName in candidateNodeTemplate.types)) {
                      puccini.log.debugf('{resolve} %s: node template "%s" is not of type "%s"', path, candidateNodeTemplateName, nodeTypeName);
                      continue;
                    }

                    // Node filter
                    if ((nodeTemplatePropertyConstraints.length !== 0) && !arePropertiesValid(path, sourceVertex, 'node template', candidateNodeTemplateName, candidateNodeTemplate, nodeTemplatePropertyConstraints)) {
                      puccini.log.debugf('{resolve} %s: properties of node template "%s" do not match constraints', path, candidateNodeTemplateName);
                      continue;
                    }

                    var candidateCapabilities = candidateNodeTemplate.capabilities;

                    // Capability filter
                    if (capabilityPropertyConstraintsMap.length !== 0) {
                      var valid = true;
                      for (var candidateCapabilityName in candidateCapabilities) {
                        var candidateCapability = candidateCapabilities[candidateCapabilityName];
                        var capabilityPropertyConstraints = capabilityPropertyConstraintsMap[candidateCapabilityName];
                        if ((capabilityPropertyConstraints !== undefined) && (capabilityPropertyConstraints.length !== 0) && !arePropertiesValid(path, sourceVertex, 'capability', candidateCapabilityName, candidateCapability, capabilityPropertyConstraints)) {
                          puccini.log.debugf('{resolve} %s: properties of capability "%s" in node template "%s" do not match constraints', path, candidateCapabilityName, candidateNodeTemplateName);
                          valid = false;
                          break;
                        }
                      }
                      if (!valid)
                        continue;
                    }

                    candidates.push({
                      vertex: vertex,
                      nodeTemplateName: candidateNodeTemplateName,
                      capabilities: candidateCapabilities
                    });
                  }

                  return candidates;
                }

                function gatherCandidateCapabilities(requirement, candidateNodeTemplates) {
                  var path = requirement.path;
                  var capabilityName = requirement.capabilityName;
                  var capabilityTypeName = requirement.capabilityTypeName;

                  var candidates = [];
                  for (var c = 0; c < candidateNodeTemplates.length; c++) {
                    var candidate = candidateNodeTemplates[c];
                    var candidateVertex = candidate.vertex;
                    var candidateNodeTemplateName = candidate.nodeTemplateName;

                    var candidateCapabilities = [];
                    for (var candidateCapabilityName in candidate.capabilities) {
                      candidateCapabilities.push({
                        name: candidateCapabilityName,
                        capability: candidate.capabilities[candidateCapabilityName]
                      });
                    }

                    // For consistent results, we will sort the candidate capabilities by name
                    candidateCapabilities.sort(function(a, b) {
                      return a.name < b.name ? -1 : 1;
                    });

                    for (var cc = 0; cc < candidateCapabilities.length; cc++) {
                      var candidateCapabilityName = candidateCapabilities[cc].name;

                      if ((capabilityName !== '') && (capabilityName !== candidateCapabilityName)) {
                        puccini.log.debugf('{resolve} %s: capability "%s" in node template "%s" is not named "%s"', path, candidateCapabilityName, candidateNodeTemplateName, capabilityName);
                        continue;
                      }

                      var candidateCapability = candidateCapabilities[cc].capability;

                      if ((capabilityTypeName !== '') && !(capabilityTypeName in candidateCapability.types)) {
                        // puccini.log.debugf('{resolve} %s: capability "%s" in node template "%s" is not of type "%s"', path, candidateCapabilityName, candidateNodeTemplateName, capabilityTypeName);
                        continue;
                      }

                      var maxRelationshipCount = candidateCapability.maxRelationshipCount;
                      if ((maxRelationshipCount !== -1) && (countRelationships(candidateVertex, candidateCapabilityName) === maxRelationshipCount)) {
                        puccini.log.debugf('{resolve} %s: capability "%s" in node template "%s" already has %d relationships, the maximum allowed', path, candidateCapabilityName, candidateNodeTemplateName, maxRelationshipCount);
                        continue;
                      }

                      candidates.push({
                        vertex: candidateVertex,
                        nodeTemplateName: candidateNodeTemplateName,
                        capability: candidateCapability,
                        capabilityName: candidateCapabilityName
                      });
                    }
                  }

                  return candidates;
                }

                function addRelationship(sourceVertex, requirement, targetVertex, capabilityName) {
                  var edge = sourceVertex.newEdgeTo(targetVertex);
                  edge.metadata['puccini-tosca'] = {
                    version: '1.0',
                    kind: 'relationship'
                  };

                  var relationship = requirement.relationship;
                  if (relationship)
                    edge.properties = {
                      name: requirement.name,
                      description: relationship.description,
                      types: relationship.types,
                      properties: relationship.properties,
                      attributes: relationship.attributes,
                      interfaces: relationship.interfaces,
                      capability: capabilityName
                    };
                  else
                    // Untyped relationship
                    edge.properties = {
                      name: requirement.name,
                      description: '',
                      types: {},
                      properties: {},
                      attributes: {},
                      interfaces: {},
                      capability: capabilityName
                    };
                }

                function countRelationships(vertex, capabilityName) {
                  var count = 0;
                  for (var e = 0; e < vertex.edgesIn.length; e++) {
                    var edge = vertex.edgesIn[e];
                    if (tosca.isTosca(edge, 'relationship') && (edge.properties.capability === capabilityName))
                      count++;
                  }
                  return count;
                }

                function arePropertiesValid(path, sourceVertex, kind, name, entity, constraintsMap) {
                  var valid = true;

                  var properties = entity.properties;
                  for (var propertyName in constraintsMap) {
                    puccini.log.debugf('{resolve} %s: applying constraints to property "%s" of %s "%s"', path, propertyName, kind, name);

                    var property = properties[propertyName];
                    if (property === undefined) {
                      // return false; GOJA: returning from inside for-loop is broken
                      valid = false;
                      break;
                    }

                    var constraints = constraintsMap[propertyName];
                    constraints = clout.newConstraints(constraints, sourceVertex, sourceVertex, entity)
                    if (!constraints.validate(property)) {
                      // return false; GOJA: returning from inside for-loop is broken
                      valid = false;
                      break;
                    }
                  }

                  return valid;
                }

                function isMaxCountGreater(a, b) {
                  if (a == -1)
                    return b !== -1;
                  else if (b == -1)
                    return false;
                  return a > b;
                }

                function unsatisfied(path, name, message) {
                  if (typeof problems === 'undefined')
                    throw puccini.sprintf('%s: could not satisfy "%s" because %s', path, name, message);
                  else
                    problems.reportf('%s: could not satisfy "%s" because %s', path, name, message);
                }

                function notEnoughRelationships(nodeTemplateName, capabilityName, relationshipCount, minRelationshipCount) {
                  if (typeof problems === 'undefined')
                    throw puccini.sprintf('capability "%s" of node template "%s" does not have enough relationships: %d < %d', capabilityName, nodeTemplateName, relationshipCount, minRelationshipCount);
                  else
                    problems.reportf('capability "%s" of node template "%s" does not have enough relationships: %d < %d', capabilityName, nodeTemplateName, relationshipCount, minRelationshipCount);
                }
            utils: |-
                clout.exec('tosca.helpers');

                tosca.toCoercibles = function() {
                  tosca.traverseValues(clout.newCoercible);
                };

                tosca.unwrapCoercibles = function() {
                  tosca.traverseValues(clout.unwrap);
                };

                tosca.coerce = function() {
                  tosca.toCoercibles();
                  tosca.traverseValues(clout.coerce);
                };

                tosca.traverseValues = function(traverser) {
                  if (tosca.isTosca(clout)) {
                    tosca.traverseObjectValues(traverser, clout.properties.tosca.inputs);
                    tosca.traverseObjectValues(traverser, clout.properties.tosca.outputs);
                  }

                  for (var vertexId in clout.vertexes) {
                    var vertex = clout.vertexes[vertexId];
                    if (tosca.isNodeTemplate(vertex)) {
                      var nodeTemplate = vertex.properties;

                      tosca.traverseObjectValues(traverser, nodeTemplate.properties, vertex);
                      tosca.traverseObjectValues(traverser, nodeTemplate.attributes, vertex);
                      tosca.traverseInterfaceValues(traverser, nodeTemplate.interfaces, vertex)

                      for (var capabilityName in nodeTemplate.capabilities) {
                        var capability = nodeTemplate.capabilities[capabilityName];
                        tosca.traverseObjectValues(traverser, capability.properties, vertex);
                        tosca.traverseObjectValues(traverser, capability.attributes, vertex);
                      }

                      for (var artifactName in nodeTemplate.artifacts) {
                        var artifact = nodeTemplate.artifacts[artifactName];
                        tosca.traverseObjectValues(traverser, artifact.properties, vertex);
                      }

                      for (var e = 0; e < vertex.edgesOut.length; e++) {
                        var edge = vertex.edgesOut[e];
                        if (!tosca.isTosca(edge, 'relationship'))
                          continue;

                        var relationship = edge.properties;
                        tosca.traverseObjectValues(traverser, relationship.properties, edge, vertex, edge.target);
                        tosca.traverseObjectValues(traverser, relationship.attributes, edge, vertex, edge.target);
                        tosca.traverseInterfaceValues(traverser, relationship.interfaces, edge, vertex, edge.target);
                      }
                    } else if (tosca.isTosca(vertex, 'group')) {
                      var group = vertex.properties;

                      tosca.traverseObjectValues(traverser, group.properties, vertex);
                      tosca.traverseInterfaceValues(traverser, group.interfaces, vertex)
                    } else if (tosca.isTosca(vertex, 'policy')) {
                      var policy = vertex.properties;

                      tosca.traverseObjectValues(traverser, policy.properties, vertex);
                    }
                  }
                };

                tosca.traverseInterfaceValues = function(traverser, interfaces, site, source, target) {
                  for (var interfaceName in interfaces) {
                    var interface_ = interfaces[interfaceName];
                    tosca.traverseObjectValues(traverser, interface_.inputs, site, source, target);
                    for (var operationName in interface_.operations)
                      tosca.traverseObjectValues(traverser, interface_.operations[operationName].inputs, site, source, target);
                  }
                };

                tosca.traverseObjectValues = function(traverser, o, site, source, target) {
                  for (var k in o)
                    o[k] = traverser(o[k], site, source, target);
                };
        valid_values: |-
            // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
            // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

            function validate(v) {
              var values = Array.prototype.slice.call(arguments, 1);
              return values.indexOf(v) !== -1;
            }
    puccini-tosca:
        history:
          - "2020-04-13T13:45:57.5765831-07:00"
        version: "1.0"
properties:
    tosca:
        description: Firewall VNF Service
        inputs:
            auth_url:
                constraints: []
                description: Authentication URL
                value: http://localhost/
            cidr:
                constraints: []
                description: ""
                value: 192.168.1.0
            domain_name:
                constraints: []
                description: Domain-level authorization scope (name or ID)
                value: default
            lower_threshold:
                constraints: []
                description: Packet rate threshold below which to trigger rate limiter
                value: 10
            network_name:
                constraints: []
                description: Name of this network
                value: public
            num_streams:
                constraints:
                  - constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: 1
                          - constraints: []
                            description: ""
                            value: 10
                        location: ""
                        name: in_range
                        path: topologytemplate.inputs["num_streams"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                description: ""
                value: 5
            password:
                constraints: []
                description: Authentication password
                value: password
            project_id:
                constraints: []
                description: Project-level authentication scope (name or ID)
                value: id101
            region_name:
                constraints: []
                description: Authentication region name
                value: DFW
            selected_flavour:
                constraints: []
                description: 'VNF deployment flavour selected by the consumer. '
                value: simple
            upper_threshold:
                constraints: []
                description: Packet rate threshold abovewhich to trigger rate limiter
                value: 80
            url:
                constraints: []
                description: Service URL (when using the service token)
                value: http://localhost
            username:
                constraints: []
                description: Authentication username
                value: cci
        metadata: {}
        outputs:
            sink_ip_address:
                constraints: []
                description: ""
                functionCall:
                    arguments:
                      - constraints: []
                        description: ""
                        value: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
                      - constraints: []
                        description: ""
                        value: ip_address
                    location: ""
                    name: get_attribute
                    path: topologytemplate.outputparameterdefinitions["sink_ip_address"].value
                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
vertexes:
    _1aVBD0NyPLDT2MCKD5685JZEPmD:
        metadata:
            puccini-tosca:
                kind: policyTrigger
                version: "1.0"
        properties:
            action:
                callOperation: null
                setNodeState: ""
                update:
                    num_streams:
                        constraints: []
                        description: ""
                        value: 4
            condition:
                traffic_volume:
                  - constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: SELF
                          - constraints: []
                            description: ""
                            value: upper_threshold
                        location: ""
                        name: greater_than
                        path: topologytemplate.policies[0].triggerdefinitions["traffic_high"].description[0]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            description: Triggering event based on packet volume below lower threshold
            event_type: cci.interfaces.TrafficMonitor.traffic_volume_notification
            name: traffic_high
        edgesOut: []
    _1aVBD0ZvSISbypZl2Bc1QlTUQLB:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/vpp/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/vpp/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: VPP Software
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.vpp
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].relationship.artifacts["create"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.VPP:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
    _1aVBD0ylTePit0YdbSM0kN0vzOV:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/honeycomb/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/honeycomb/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Honeycomb Software
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.honeycomb
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.vpp
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.Honeycomb:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD0ZvSISbypZl2Bc1QlTUQLB
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
    _1aVBD1eoLviv9iWIM6MgwYHnNKx:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes: {}
            capabilities:
                link:
                    attributes: {}
                    description: A node type that includes the Linkable capability
                        indicates that it can be pointed by tosca.relationships.network.LinksTo
                        relationship type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 1
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Linkable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.3
                                normative: "true"
                route_target:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.RouteTarget:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: 'CCI network node. '
            directives:
              - substitute:_1aVBD4Brnp8x8IFUmx2Os4ydDjZ:_1aVBD6LvdqPeuEpi7VK3FuSb1lW:_1aVBD1fKEPnTlggXnm1E3AGnKvf
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: unprotected_network
            properties:
                cidr:
                    constraints: []
                    description: The cidr block of the requested network.
                    value: 192.168.20.0/24
                network_name:
                    constraints: []
                    description: ""
                    value: unprotected_network
                region_name:
                    constraints: []
                    description: Name of the cloud region in which to deploy this
                        function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_sink"].requirements[1].targetnodetemplate.properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            requirements: []
            types:
                cci.nodes.Network:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut: []
    _1aVBD1fKEPnTlggXnm1E3AGnKvf:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                link:
                    attributes: {}
                    description: A node type that includes the Linkable capability
                        indicates that it can be pointed by tosca.relationships.network.LinksTo
                        relationship type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Linkable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.3
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/network/create.sh
                            inputs:
                                os_network_admin_state_up:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: admin_state_up
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_admin_state_up"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_network_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.network
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/network/delete.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: unprotected_network.firewall__flavors__network_service.yaml.network
            properties:
                admin_state_up:
                    constraints: []
                    description: ""
                    value: true
                name:
                    constraints: []
                    description: ""
                    value: unprotected_network
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: cloud
                nodeTemplateName: ""
                nodeTemplatePropertyConstraints:
                    region_name:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                map:
                                    get_input:
                                        constraints: []
                                        description: ""
                                        value: region_name
                            location: ""
                            name: equal
                            path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.requirements[0].targetnodefilter.propertyfilters[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                nodeTypeName: os.nodes.Cloud
                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].relationship.artifacts["Configure"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Network:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
    _1aVBD3AnJ3Wpz3ehYbFNcsYsEfP:
        metadata:
            puccini-tosca:
                kind: substitution
                version: "1.0"
        properties:
            properties:
                region_name:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[3].propertymappings["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            substitutionFilter:
              - capabilityPropertyConstraints: {}
                propertyFilterConstraints:
                    flavour_id:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: simple
                            location: ""
                            name: equal
                            path: topologytemplate.substitutionmappings[3].substitutionfilter.propertyfilters[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            type: cci.nodes.Firewall
            typeMetadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: forwarder
                capabilityName: protected_forwarder
            targetID: _1aVBD6H3p1Kwr61OxjokXaRsnQL
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: forwarder
                capabilityName: unprotected_forwarder
            targetID: _1aVBD663PGeHGExcKCPjigVNbL2
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: link
                requirementName: unprotected_network
            targetID: _1aVBD663PGeHGExcKCPjigVNbL2
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: link
                requirementName: protected_network
            targetID: _1aVBD6H3p1Kwr61OxjokXaRsnQL
    _1aVBD3V3RjrB7wiuK6nlxn8HIbp:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                config:
                    description: ""
                    properties: {}
                    sourcePath: firewall/artifacts/firewall/config.sh
                    targetPath: ""
                    types: {}
                create:
                    description: ""
                    properties: {}
                    sourcePath: firewall/artifacts/firewall/create.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA SoftwareComponent node represents a generic software
                component that can be managed and run by a TOSCA Compute Node Type.
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0].targetnodetemplate.cci.nodes.FirewallSoftware.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: common/artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: config
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0].targetnodetemplate.cci.nodes.FirewallSoftware.interfacedefinitions["Standard"].operationdefinitions["configure"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: common/artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0].targetnodetemplate.cci.nodes.FirewallSoftware.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.firewall
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.honeycomb
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0].relationship.artifacts["create"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0].relationship.artifacts["create"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.FirewallSoftware:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD0ylTePit0YdbSM0kN0vzOV
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
    _1aVBD3cZjF3iLTZ4L05QdYd6ALP:
        metadata:
            puccini-tosca:
                kind: substitution
                version: "1.0"
        properties:
            properties:
                region_name:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[2].propertymappings["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            substitutionFilter:
              - capabilityPropertyConstraints: {}
                propertyFilterConstraints:
                    flavour_id:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: simple
                            location: ""
                            name: equal
                            path: topologytemplate.substitutionmappings[2].substitutionfilter.propertyfilters[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            type: cci.nodes.PacketSink
            typeMetadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: router
                capabilityName: router
            targetID: _1aVBD07z2EqiAAnHcDg5vEpFrCt
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: sink
                capabilityName: sink
            targetID: _1aVBD3o1WN2AH0JIbH63Btis5o7
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: link
                requirementName: protected_network
            targetID: _1aVBD51xlKJDuMjnbqzTc87iPUj
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: destination
                requirementName: destination
            targetID: _1aVBD3rgVj58sGrzXWygLQwGHKS
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: gateway
                requirementName: gateway
            targetID: _1aVBD3rgVj58sGrzXWygLQwGHKS
    _1aVBD3g02LSgBC8RZ146G7CDQSe:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes: {}
            capabilities:
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Packet Generator network function in support of Proof of
                Concept
            directives:
              - substitute:_1aVBD8Vw7rk2BATG5eEQxLEDRnu:_1aVBD9BdmYE4IbW4AEEE16TQ3ZP:_1aVBD92tTaTQJqKN5Db7ZxF4sbt:_1aVBDBSH2S9CuUzm2RnAbWSa152:_1aVBDBdEFGXvmcQp6zJrZ69s3l8:_1aVBDCoonJak64NNk67iUiFfv7u:_1aVBDEEH7mc9qa233ey0uWfp9hZ:_1aVBDFOhZagW9mFxEmLhCUngrJS
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator
            properties:
                descriptor_id:
                    constraints: []
                    description: Globally unique identifier of the Network Function
                    value: d4fe77a8-fa30-4de3-9943-0dca9b66138c
                flavour_id:
                    constraints: []
                    description: Identifier of the Deployment Flavour within the Network
                        Function
                    value: simple
                num_streams:
                    constraints:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: 1
                              - constraints: []
                                description: ""
                                value: 10
                            location: ""
                            name: in_range
                            path: topologytemplate.nodetemplates["packet_generator"].properties["num_streams"]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: Requested number of streams
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: num_streams
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_generator"].properties["num_streams"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                product_name:
                    constraints: []
                    description: Human readable name for the Network Function Product
                    value: CCI Packet Generator
                provider:
                    constraints: []
                    description: Provider of the Network Function
                    value: CCI
                region_name:
                    constraints: []
                    description: Name of the cloud region in which to deploy this
                        function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_generator"].properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                software_version:
                    constraints: []
                    description: Software version of the Network Function
                    value: 1.0.0
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: unprotected_network
                nodeTemplateName: unprotected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_generator"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.RouteTarget
                name: destination
                nodeTemplateName: protected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_generator"].requirements[1]
                relationship: null
              - capabilityName: unprotected_forwarder
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Forwarder
                name: gateway
                nodeTemplateName: firewall
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_generator"].requirements[2]
                relationship: null
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Endpoint
                name: target
                nodeTemplateName: packet_sink
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: cci.nodes.PacketSink
                path: topologytemplate.nodetemplates["packet_generator"].requirements[3]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network connection relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.ConnectsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.4
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.NetworkFunction:
                    metadata: {}
                cci.nodes.PacketGenerator:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: unprotected_network
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD1eoLviv9iWIM6MgwYHnNKx
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: route_target
                description: ""
                interfaces: {}
                name: destination
                properties: {}
                types: {}
            targetID: _1aVBD3tvq0P8F2LTaq15UREfFcL
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: unprotected_forwarder
                description: ""
                interfaces: {}
                name: gateway
                properties: {}
                types: {}
            targetID: _1aVBD6yRhlZxpohzI0be7JsAG6M
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: sink
                description: This type represents a network connection relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: target
                properties: {}
                types:
                    tosca.relationships.ConnectsTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.4
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD5SImfuA7j65ppoqZXzOJC3
    _1aVBD3o1WN2AH0JIbH63Btis5o7:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                config:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/darkstat/config.sh
                    targetPath: ""
                    types: {}
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/darkstat/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/darkstat/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                sink:
                    attributes:
                        ip_address:
                            constraints: []
                            description: 'Note: This is the IP address as propagated
                                up by the associated node''s host (Compute) container.'
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].capabilities["sink"].attributes["ip_address"]
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: This is the default TOSCA type that should be used
                        or extended to define a network endpoint capability. This
                        includes the information to express a basic endpoint with
                        a single port or a complex endpoint with multiple ports. By
                        default the Endpoint is assumed to represent an address on
                        a private network unless otherwise specified.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        initiator:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: source
                                      - constraints: []
                                        description: ""
                                        value: target
                                      - constraints: []
                                        description: ""
                                        value: peer
                                    location: ""
                                    name: valid_values
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].capabilities["sink"].attributes["ip_address"]
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: The optional indicator of the direction of
                                the connection.
                            value: target
                        network_name:
                            constraints: []
                            description: 'The optional name (or ID) of the network
                                this endpoint should be bound to. network_name: PRIVATE
                                | PUBLIC | <network_name> | <network_id>.'
                            value: PRIVATE
                        protocol:
                            constraints: []
                            description: 'The name of the protocol (i.e., the protocol
                                prefix) that the endpoint accepts (any OSI Layer 4-7
                                protocols). Examples: http, https, ftp, tcp, udp,
                                etc.'
                            value: tcp
                        secure:
                            constraints: []
                            description: Requests for the endpoint to be secure and
                                use credentials supplied on the ConnectsTo relationship.
                            value: false
                    types:
                        tosca.capabilities.Endpoint:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.7
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA SoftwareComponent node represents a generic software
                component that can be managed and run by a TOSCA Compute Node Type.
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].cci.nodes.PacketSinkSoftware.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: config
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].cci.nodes.PacketSinkSoftware.interfacedefinitions["Standard"].operationdefinitions["configure"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].cci.nodes.PacketSinkSoftware.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].cci.nodes.PacketSinkSoftware.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_software
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.linux_route
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.PacketSinkSoftware:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD3rgVj58sGrzXWygLQwGHKS
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD07z2EqiAAnHcDg5vEpFrCt
    _1aVBD3rgVj58sGrzXWygLQwGHKS:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/standard_route/create.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Static route configured on a linux host
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: common/artifacts/run_remote.sh
                            inputs:
                                destination_network:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: cidr
                                          - constraints: []
                                            description: ""
                                            value: destination
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["destination_network"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                gateway_ip:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: gateway
                                          - constraints: []
                                            description: ""
                                            value: ip_address
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["gateway_ip"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                host_ip_address:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: public_address
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: router
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["host_ip_address"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[0].targetnodetemplate.interfaces["Standard"].operations["create"].inputs["script_file"]
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_sink.firewall__flavors__packet_sink_function_service.yaml.linux_route
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Router
                name: router
                nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[0].relationship.artifacts["Configure"]
                relationship: null
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Forwarder
                name: gateway
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.protected_port
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Port
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[0].relationship.artifacts["Configure"]
                relationship: null
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.RouteTarget
                name: destination
                nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.subnet
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Subnet
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_software"].requirements[0].relationship.artifacts["Configure"]
                relationship: null
            types:
                cci.nodes.LinuxRoute:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: router
                description: ""
                interfaces: {}
                name: router
                properties: {}
                types: {}
            targetID: _1aVBD07z2EqiAAnHcDg5vEpFrCt
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: forwarder
                description: ""
                interfaces: {}
                name: gateway
                properties: {}
                types: {}
            targetID: _1aVBD6H3p1Kwr61OxjokXaRsnQL
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: route_target
                description: ""
                interfaces: {}
                name: destination
                properties: {}
                types: {}
            targetID: _1aVBD4Brnp8x8IFUmx2Os4ydDjZ
    _1aVBD3tvq0P8F2LTaq15UREfFcL:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes: {}
            capabilities:
                link:
                    attributes: {}
                    description: A node type that includes the Linkable capability
                        indicates that it can be pointed by tosca.relationships.network.LinksTo
                        relationship type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 1
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Linkable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.3
                                normative: "true"
                route_target:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.RouteTarget:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: 'CCI network node. '
            directives:
              - substitute:_1aVBD8sw6GivVKYOYs2OHwzq4tS:_1aVBDAE9ffFr1BEascVFErP2C8I:_1aVBDAwy0aI6X3oVaXE1jDX3G6r
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: protected_network
            properties:
                cidr:
                    constraints: []
                    description: The cidr block of the requested network.
                    value: 192.168.10.0/24
                network_name:
                    constraints: []
                    description: ""
                    value: protected_network
                region_name:
                    constraints: []
                    description: Name of the cloud region in which to deploy this
                        function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_sink"].requirements[0].targetnodetemplate.properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            requirements: []
            types:
                cci.nodes.Network:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut: []
    _1aVBD4Brnp8x8IFUmx2Os4ydDjZ:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                route_target:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.RouteTarget:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: network
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/subnet/create.sh
                            inputs:
                                os_subnet_cidr:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: cidr
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_cidr"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_enable_dhcp:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: enable_dhcp
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_enable_dhcp"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: network
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.subnet
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/subnet/delete.sh
                            inputs:
                                os_subnet_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_subnet_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: unprotected_network.firewall__flavors__network_service.yaml.subnet
            properties:
                cidr:
                    constraints: []
                    description: ""
                    value: 192.168.20.0/24
                enable_dhcp:
                    constraints: []
                    description: ""
                    value: true
                name:
                    constraints: []
                    description: ""
                    value: unprotected_network
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: network
                nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Subnet:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: network
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD1fKEPnTlggXnm1E3AGnKvf
    _1aVBD4Xwnam3cJy2q0jaAAZBjlR:
        metadata:
            puccini-tosca:
                kind: policy
                version: "1.0"
        properties:
            description: Policy to limit the traffic volume received by a Network
                Function
            name: packet_volume_limiter
            properties:
                lower_threshold:
                    constraints: []
                    description: The packet volume value below which policy is to
                        be triggered.  If the volume of packets falls below this value,
                        the policy will be triggered.
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: lower_threshold
                        location: ""
                        name: get_input
                        path: topologytemplate.policies[0].properties["lower_threshold"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                upper_threshold:
                    constraints: []
                    description: The packet volume value above which policy is to
                        be triggered.  If the volume of packets exceeds this value,
                        the policy will be triggered.
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: upper_threshold
                        location: ""
                        name: get_input
                        path: topologytemplate.policies[0].properties["upper_threshold"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            types:
                cci.policy.PacketVolumeLimiter:
                    metadata: {}
                tosca.policies.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.11.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: nodeTemplateTarget
                    version: "1.0"
            properties: {}
            targetID: _1aVBD6yRhlZxpohzI0be7JsAG6M
          - metadata:
                puccini-tosca:
                    kind: policyTrigger
                    version: "1.0"
            properties: {}
            targetID: _1aVBD0NyPLDT2MCKD5685JZEPmD
          - metadata:
                puccini-tosca:
                    kind: policyTrigger
                    version: "1.0"
            properties: {}
            targetID: _1aVBD7Li4c8UcbPOhvljdxgloLR
    _1aVBD4ddFqgZjuaS975hI0vdGQv:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: 'Openstack resource '
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: common__resources__openstack_resource.yaml.openstack
            properties:
                auth_url:
                    constraints: []
                    description: Authentication URL
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: auth_url
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["auth_url"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                domain_name:
                    constraints: []
                    description: Domain-level authorization scope (name or ID)
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: domain_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["domain_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                password:
                    constraints: []
                    description: Authentication password
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: password
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["password"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                project_id:
                    constraints: []
                    description: Project-level authentication scope (name or ID)
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: project_id
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["project_id"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                region_name:
                    constraints: []
                    description: Authentication region name
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                url:
                    constraints: []
                    description: Service URL (when using the service token)
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: url
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["url"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                username:
                    constraints: []
                    description: Authentication username
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: username
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["common__resources__openstack_resource.yaml.openstack"].properties["username"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            requirements: []
            types:
                os.nodes.Cloud:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
    _1aVBD5OHMIXLneoZkpFuFj6eHFr:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/ves/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/ves/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: VES Software
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].cci.nodes.VES.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].cci.nodes.VES.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].cci.nodes.VES.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                ves_collector_ip:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: ves_collector_ip
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].cci.nodes.VES.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["ves_collector_ip"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                ves_collector_port:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: ves_collector_port
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].cci.nodes.VES.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["ves_collector_port"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.ves
            properties:
                ves_collector_ip:
                    constraints: []
                    description: IP address of the collector
                    value: 1.2.3.4
                ves_collector_port:
                    constraints: []
                    description: IP port of the collector
                    value: 3904
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.ves"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.VES:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD3V3RjrB7wiuK6nlxn8HIbp
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
    _1aVBD5SImfuA7j65ppoqZXzOJC3:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes: {}
            capabilities:
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                sink:
                    attributes:
                        ip_address:
                            constraints: []
                            description: 'Note: This is the IP address as propagated
                                up by the associated node''s host (Compute) container.'
                            value: null
                    description: This is the default TOSCA type that should be used
                        or extended to define a network endpoint capability. This
                        includes the information to express a basic endpoint with
                        a single port or a complex endpoint with multiple ports. By
                        default the Endpoint is assumed to represent an address on
                        a private network unless otherwise specified.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        initiator:
                            constraints: []
                            description: The optional indicator of the direction of
                                the connection.
                            value: source
                        network_name:
                            constraints: []
                            description: 'The optional name (or ID) of the network
                                this endpoint should be bound to. network_name: PRIVATE
                                | PUBLIC | <network_name> | <network_id>.'
                            value: PRIVATE
                        protocol:
                            constraints: []
                            description: 'The name of the protocol (i.e., the protocol
                                prefix) that the endpoint accepts (any OSI Layer 4-7
                                protocols). Examples: http, https, ftp, tcp, udp,
                                etc.'
                            value: tcp
                        secure:
                            constraints: []
                            description: Requests for the endpoint to be secure and
                                use credentials supplied on the ConnectsTo relationship.
                            value: false
                    types:
                        tosca.capabilities.Endpoint:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.7
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Packet Sink network function in support of Proof of Concept
            directives:
              - substitute:_1aVBD3cZjF3iLTZ4L05QdYd6ALP:_1aVBD3o1WN2AH0JIbH63Btis5o7:_1aVBD3rgVj58sGrzXWygLQwGHKS:_1aVBD07z2EqiAAnHcDg5vEpFrCt:_1aVBD51xlKJDuMjnbqzTc87iPUj
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs:
                                sink_ip_address:
                                    attributeName: ip_address
                                    capabilityName: sink
                                    nodeTemplateName: packet_sink
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_sink
            properties:
                descriptor_id:
                    constraints: []
                    description: Globally unique identifier of the Network Function
                    value: 8fc3fa8a-e2fa-47a9-88a8-09c8ab7a17ea
                flavour_id:
                    constraints: []
                    description: Identifier of the Deployment Flavour within the Network
                        Function
                    value: simple
                product_name:
                    constraints: []
                    description: Human readable name for the Network Function Product
                    value: CCI Packet Sink
                provider:
                    constraints: []
                    description: Provider of the Network Function
                    value: CCI
                region_name:
                    constraints: []
                    description: Name of the cloud region in which to deploy this
                        function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_sink"].properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                software_version:
                    constraints: []
                    description: Software version of the Network Function
                    value: 1.0.0
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: protected_network
                nodeTemplateName: protected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_sink"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.RouteTarget
                name: destination
                nodeTemplateName: unprotected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_sink"].requirements[1]
                relationship: null
              - capabilityName: protected_forwarder
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Forwarder
                name: gateway
                nodeTemplateName: firewall
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_sink"].requirements[2]
                relationship: null
            types:
                cci.nodes.NetworkFunction:
                    metadata: {}
                cci.nodes.PacketSink:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: protected_network
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD3tvq0P8F2LTaq15UREfFcL
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: route_target
                description: ""
                interfaces: {}
                name: destination
                properties: {}
                types: {}
            targetID: _1aVBD1eoLviv9iWIM6MgwYHnNKx
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: protected_forwarder
                description: ""
                interfaces: {}
                name: gateway
                properties: {}
                types: {}
            targetID: _1aVBD6yRhlZxpohzI0be7JsAG6M
    _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                networks:
                    constraints: []
                    description: The list of logical networks assigned to the compute
                        host instance and information about them.
                    value: null
                password:
                    constraints: []
                    description: ""
                    value: null
                ports:
                    constraints: []
                    description: The list of logical ports assigned to the compute
                        host instance and information about them.
                    value: null
                private_address:
                    constraints: []
                    description: The primary private IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                public_address:
                    constraints: []
                    description: The primary public IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                binding:
                    attributes: {}
                    description: A node type that includes the Bindable capability
                        indicates that it can be bound to a logical network association
                        via a network port.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Bindable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.14
                                normative: "true"
                endpoint:
                    attributes:
                        ip_address:
                            constraints: []
                            description: 'Note: This is the IP address as propagated
                                up by the associated node''s host (Compute) container.'
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: public_address
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.capabilities["endpoint"].attributes["ip_address"]
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: This is the default TOSCA type that should be used
                        or extended to define a specialized administrator endpoint
                        capability.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        initiator:
                            constraints: []
                            description: The optional indicator of the direction of
                                the connection.
                            value: source
                        network_name:
                            constraints: []
                            description: 'The optional name (or ID) of the network
                                this endpoint should be bound to. network_name: PRIVATE
                                | PUBLIC | <network_name> | <network_id>.'
                            value: PRIVATE
                        port:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                      - constraints: []
                                        description: ""
                                        value: 65535
                                    location: ""
                                    name: in_range
                                    path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: The optional port of the endpoint.
                            value: 22
                        protocol:
                            constraints: []
                            description: 'The name of the protocol (i.e., the protocol
                                prefix) that the endpoint accepts (any OSI Layer 4-7
                                protocols). Examples: http, https, ftp, tcp, udp,
                                etc.'
                            value: ssh
                        secure:
                            constraints: []
                            description: Requests for the endpoint to be secure and
                                use credentials supplied on the ConnectsTo relationship.
                            value: true
                    types:
                        tosca.capabilities.Endpoint:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.7
                                normative: "true"
                        tosca.capabilities.Endpoint.Admin:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.9
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Compute capability, when included on a Node Type
                        or Template definition, indicates that the node can provide
                        hosting on a named compute resource.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        disk_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of the local disk available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 20000000000
                                $string: 20000000000 B
                                originalString: 20 GB
                                scalar: 20
                                unit: GB
                        mem_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of memory available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 4294967296
                                $string: 4294967296 B
                                originalString: 4096 MiB
                                scalar: 4096
                                unit: MiB
                        num_cpus:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Number of (actual or virtual) CPUs associated
                                with the Compute node.
                            value: 1
                    types:
                        tosca.capabilities.Compute:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.3
                                normative: "true"
                                role: host
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                os:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express an Operating System capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        architecture:
                            constraints: []
                            description: 'The Operating System (OS) architecture.
                                Examples of valid values include: x86_32, x86_64,
                                etc.'
                            value: x86_64
                        distribution:
                            constraints: []
                            description: 'The Operating System (OS) distribution.
                                Examples of valid values for a "type" of "Linux" would
                                include: debian, fedora, rhel and ubuntu.'
                            value: ubuntu
                        type:
                            constraints: []
                            description: 'The Operating System (OS) type. Examples
                                of valid values include: linux, aix, mac, windows,
                                etc.'
                            value: linux
                        version:
                            constraints: []
                            description: The Operating System version.
                            value:
                                $string: "18.04"
                                build: 0
                                fix: 0
                                major: 18
                                minor: 4
                                originalString: "18.04"
                                qualifier: ""
                    types:
                        tosca.capabilities.OperatingSystem:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.12
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                scalable:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express a scalability capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        max_instances:
                            constraints: []
                            description: This property is used to indicate the maximum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                        min_instances:
                            constraints: []
                            description: This property is used to indicate the minimum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                    types:
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.Scalable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.13
                                normative: "true"
            description: Openstack Compute node
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/compute/create.sh
                            inputs:
                                architecture:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: architecture
                                          - constraints: []
                                            description: ""
                                            value: os
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["architecture"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                cpu_frequency:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: host
                                          - constraints: []
                                            description: ""
                                            value: cpu_frequency
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["cpu_frequency"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                disk_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: disk_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["disk_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                distribution:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: distribution
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["distribution"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                mem_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: mem_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["mem_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                num_cpus:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: num_cpus
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["num_cpus"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                server_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["server_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                type:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: type
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["type"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                version:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: version
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["version"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                adminPass:
                                    attributeName: password
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/compute/delete.sh
                            inputs:
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/compute/start.sh
                            inputs:
                                server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                accessIPv4:
                                    attributeName: public_address
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
            properties:
                name:
                    constraints: []
                    description: ""
                    value: firewall
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: cloud
                nodeTemplateName: ""
                nodeTemplatePropertyConstraints:
                    region_name:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                map:
                                    get_input:
                                        constraints: []
                                        description: ""
                                        value: region_name
                            location: ""
                            name: equal
                            path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.inputs[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                nodeTypeName: os.nodes.Cloud
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.honeycomb"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Compute:
                    metadata: {}
                tosca.nodes.Abstract.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.2
                        normative: "true"
                tosca.nodes.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.3
                        normative: "true"
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
    _1aVBD6H3p1Kwr61OxjokXaRsnQL:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_project_id:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: project_id
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_project_id"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: binding
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/port/create.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: link
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.protected_port
                                ip_address:
                                    attributeName: ip_address
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.protected_port
                                mac_address:
                                    attributeName: mac_address
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.protected_port
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/port/delete.sh
                            inputs:
                                os_port_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_port_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.protected_port
            properties:
                name:
                    constraints: []
                    description: ""
                    value: protected_firewall_port
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Bindable
                name: binding
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.protected_port"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network association relationship
                        between Port and Compute node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.BindsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.5
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: link
                nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.protected_port"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
            types:
                os.nodes.Port:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: binding
                description: This type represents a network association relationship
                    between Port and Compute node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: binding
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.BindsTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.5
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: link
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBDAwy0aI6X3oVaXE1jDX3G6r
    _1aVBD6LvdqPeuEpi7VK3FuSb1lW:
        metadata:
            puccini-tosca:
                kind: substitution
                version: "1.0"
        properties:
            properties:
                cidr:
                    constraints: []
                    description: ""
                    value: 192.168.20.0/24
                network_name:
                    constraints: []
                    description: ""
                    value: unprotected_network
                region_name:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[0].propertymappings["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            substitutionFilter: []
            type: cci.nodes.Network
            typeMetadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: link
                capabilityName: link
            targetID: _1aVBD1fKEPnTlggXnm1E3AGnKvf
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: route_target
                capabilityName: route_target
            targetID: _1aVBD4Brnp8x8IFUmx2Os4ydDjZ
    _1aVBD6yRhlZxpohzI0be7JsAG6M:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                traffic_volume:
                    constraints: []
                    description: Packet volume expressed in number of packets received
                        per 10 second interval
                    value: null
            capabilities:
                protected_forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                unprotected_forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Firewall network function in support of Proof of Concept
            directives:
              - substitute:_1aVBD3V3RjrB7wiuK6nlxn8HIbp:_1aVBD5OHMIXLneoZkpFuFj6eHFr:_1aVBD5jt8RkA5ZJPAKgNTTtI8Bl:_1aVBD6H3p1Kwr61OxjokXaRsnQL:_1aVBD663PGeHGExcKCPjigVNbL2:_1aVBD0ZvSISbypZl2Bc1QlTUQLB:_1aVBD0ylTePit0YdbSM0kN0vzOV:_1aVBD3AnJ3Wpz3ehYbFNcsYsEfP
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
                monitor:
                    description: Interface to monitor traffic volume received by network
                        functions
                    inputs: {}
                    notifications:
                        traffic_volume_notification:
                            dependencies: []
                            description: ""
                            host: ""
                            implementation: ""
                            outputs:
                                traffic_volume:
                                    attributeName: traffic_volume
                                    capabilityName: ""
                                    nodeTemplateName: firewall
                            timeout: 0
                    operations: {}
                    types:
                        cci.interfaces.TrafficMonitor:
                            metadata: {}
            name: firewall
            properties:
                descriptor_id:
                    constraints: []
                    description: Globally unique identifier of the Network Function
                    value: 33eabee9-6ef7-44f1-827b-f909226aecb9
                flavour_id:
                    constraints:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: simple
                            location: ""
                            name: valid_values
                            path: topologytemplate.nodetemplates["packet_sink"].requirements[2].targetcapabilitynameortypename.artifacts["monitor"]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: Identifier of the Deployment Flavour within the Network
                        Function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: selected_flavour
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_sink"].requirements[2].targetnodetemplate.properties["flavour_id"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                product_name:
                    constraints: []
                    description: Human readable name for the Network Function Product
                    value: CCI Firewall
                provider:
                    constraints: []
                    description: Provider of the Network Function
                    value: CCI
                region_name:
                    constraints: []
                    description: Name of the cloud region in which to deploy this
                        function
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["packet_sink"].requirements[2].targetnodetemplate.properties["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                software_version:
                    constraints: []
                    description: Software version of the Network Function
                    value: 1.0.0
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: protected_network
                nodeTemplateName: protected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_sink"].requirements[2].targetcapabilitynameortypename.artifacts["monitor"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: unprotected_network
                nodeTemplateName: unprotected_network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: ""
                path: topologytemplate.nodetemplates["packet_sink"].requirements[2].targetcapabilitynameortypename.artifacts["monitor"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
            types:
                cci.nodes.Firewall:
                    metadata: {}
                cci.nodes.NetworkFunction:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: protected_network
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD3tvq0P8F2LTaq15UREfFcL
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: unprotected_network
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD1eoLviv9iWIM6MgwYHnNKx
    _1aVBD7Li4c8UcbPOhvljdxgloLR:
        metadata:
            puccini-tosca:
                kind: policyTrigger
                version: "1.0"
        properties:
            action:
                callOperation: null
                setNodeState: ""
                update:
                    num_streams:
                        constraints: []
                        description: ""
                        value: 6
            condition:
                traffic_volume:
                  - constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: SELF
                          - constraints: []
                            description: ""
                            value: lower_threshold
                        location: ""
                        name: less_than
                        path: topologytemplate.policies[0].triggerdefinitions["traffic_low"].eventtype[0]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            description: Triggering event based on packet volume below lower threshold
            event_type: cci.interfaces.TrafficMonitor.traffic_volume_notification
            name: traffic_low
        edgesOut: []
    _1aVBD07z2EqiAAnHcDg5vEpFrCt:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                networks:
                    constraints: []
                    description: The list of logical networks assigned to the compute
                        host instance and information about them.
                    value: null
                password:
                    constraints: []
                    description: ""
                    value: null
                ports:
                    constraints: []
                    description: The list of logical ports assigned to the compute
                        host instance and information about them.
                    value: null
                private_address:
                    constraints: []
                    description: The primary private IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                public_address:
                    constraints: []
                    description: The primary public IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                binding:
                    attributes: {}
                    description: A node type that includes the Bindable capability
                        indicates that it can be bound to a logical network association
                        via a network port.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Bindable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.14
                                normative: "true"
                endpoint:
                    attributes:
                        ip_address:
                            constraints: []
                            description: 'Note: This is the IP address as propagated
                                up by the associated node''s host (Compute) container.'
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: public_address
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].capabilities["endpoint"].attributes["ip_address"]
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: This is the default TOSCA type that should be used
                        or extended to define a specialized administrator endpoint
                        capability.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        initiator:
                            constraints: []
                            description: The optional indicator of the direction of
                                the connection.
                            value: source
                        network_name:
                            constraints: []
                            description: 'The optional name (or ID) of the network
                                this endpoint should be bound to. network_name: PRIVATE
                                | PUBLIC | <network_name> | <network_id>.'
                            value: PRIVATE
                        port:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                      - constraints: []
                                        description: ""
                                        value: 65535
                                    location: ""
                                    name: in_range
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].capabilities["endpoint"].attributes["ip_address"]
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: The optional port of the endpoint.
                            value: 22
                        protocol:
                            constraints: []
                            description: 'The name of the protocol (i.e., the protocol
                                prefix) that the endpoint accepts (any OSI Layer 4-7
                                protocols). Examples: http, https, ftp, tcp, udp,
                                etc.'
                            value: ssh
                        secure:
                            constraints: []
                            description: Requests for the endpoint to be secure and
                                use credentials supplied on the ConnectsTo relationship.
                            value: true
                    types:
                        tosca.capabilities.Endpoint:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.7
                                normative: "true"
                        tosca.capabilities.Endpoint.Admin:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.9
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Compute capability, when included on a Node Type
                        or Template definition, indicates that the node can provide
                        hosting on a named compute resource.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        disk_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].capabilities["host"].attributes["disk_size"]
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of the local disk available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 20000000000
                                $string: 20000000000 B
                                originalString: 20 GB
                                scalar: 20
                                unit: GB
                        mem_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].capabilities["host"].attributes["disk_size"]
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of memory available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 4294967296
                                $string: 4294967296 B
                                originalString: 4096 MiB
                                scalar: 4096
                                unit: MiB
                        num_cpus:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].capabilities["host"].attributes["disk_size"]
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Number of (actual or virtual) CPUs associated
                                with the Compute node.
                            value: 1
                    types:
                        tosca.capabilities.Compute:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.3
                                normative: "true"
                                role: host
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                os:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express an Operating System capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        architecture:
                            constraints: []
                            description: 'The Operating System (OS) architecture.
                                Examples of valid values include: x86_32, x86_64,
                                etc.'
                            value: x86_64
                        distribution:
                            constraints: []
                            description: 'The Operating System (OS) distribution.
                                Examples of valid values for a "type" of "Linux" would
                                include: debian, fedora, rhel and ubuntu.'
                            value: ubuntu
                        type:
                            constraints: []
                            description: 'The Operating System (OS) type. Examples
                                of valid values include: linux, aix, mac, windows,
                                etc.'
                            value: linux
                        version:
                            constraints: []
                            description: The Operating System version.
                            value:
                                $string: "18.04"
                                build: 0
                                fix: 0
                                major: 18
                                minor: 4
                                originalString: "18.04"
                                qualifier: ""
                    types:
                        tosca.capabilities.OperatingSystem:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.12
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                scalable:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express a scalability capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        max_instances:
                            constraints: []
                            description: This property is used to indicate the maximum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                        min_instances:
                            constraints: []
                            description: This property is used to indicate the minimum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                    types:
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.Scalable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.13
                                normative: "true"
            description: Openstack Compute node
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/compute/create.sh
                            inputs:
                                architecture:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: architecture
                                          - constraints: []
                                            description: ""
                                            value: os
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["architecture"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                cpu_frequency:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: host
                                          - constraints: []
                                            description: ""
                                            value: cpu_frequency
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["cpu_frequency"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                disk_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: disk_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["disk_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                distribution:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: distribution
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["distribution"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                mem_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: mem_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["mem_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                num_cpus:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: num_cpus
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["num_cpus"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                server_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["server_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                type:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: type
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["type"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                version:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: version
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["version"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                adminPass:
                                    attributeName: password
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/compute/delete.sh
                            inputs:
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/compute/start.sh
                            inputs:
                                server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                accessIPv4:
                                    attributeName: public_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
            properties:
                name:
                    constraints: []
                    description: ""
                    value: packet_sink
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: cloud
                nodeTemplateName: ""
                nodeTemplatePropertyConstraints:
                    region_name:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                map:
                                    get_input:
                                        constraints: []
                                        description: ""
                                        value: region_name
                            location: ""
                            name: equal
                            path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].requirements[0].relationship.interfaces["tosca_id"]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                nodeTypeName: os.nodes.Cloud
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.packet_sink_host"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Compute:
                    metadata: {}
                tosca.nodes.Abstract.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.2
                        normative: "true"
                tosca.nodes.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.3
                        normative: "true"
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
    _1aVBD8Vw7rk2BATG5eEQxLEDRnu:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/vpp/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/vpp/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: VPP Software
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.VPP.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.vpp
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.VPP:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
    _1aVBD8sw6GivVKYOYs2OHwzq4tS:
        metadata:
            puccini-tosca:
                kind: substitution
                version: "1.0"
        properties:
            properties:
                cidr:
                    constraints: []
                    description: ""
                    value: 192.168.10.0/24
                network_name:
                    constraints: []
                    description: ""
                    value: protected_network
                region_name:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[0].propertymappings["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            substitutionFilter: []
            type: cci.nodes.Network
            typeMetadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: link
                capabilityName: link
            targetID: _1aVBDAwy0aI6X3oVaXE1jDX3G6r
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: route_target
                capabilityName: route_target
            targetID: _1aVBDAE9ffFr1BEascVFErP2C8I
    _1aVBD9BdmYE4IbW4AEEE16TQ3ZP:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/demo/create.sh
                    targetPath: ""
                    types: {}
                modify:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/demo/modify.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/demo/start.sh
                    targetPath: ""
                    types: {}
            attributes: {}
            capabilities: {}
            description: Root type from which other CCI types derive
            directives: []
            interfaces:
                Standard:
                    description: This interface type adds a 'modify' operation to
                        the standard lifecycle management interface.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].cci.nodes.FirewallDemo.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].cci.nodes.FirewallDemo.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        modify:
                            dependencies: []
                            description: operation to modify a deployed node
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                num_streams:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: num_streams
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].cci.nodes.FirewallDemo.interfacedefinitions["Standard"].operationdefinitions["modify"].inputdefinitions["num_streams"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: modify
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].cci.nodes.FirewallDemo.interfacedefinitions["Standard"].operationdefinitions["modify"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].cci.nodes.FirewallDemo.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        cci.interfaces.node.lifecycle.Standard:
                            metadata: {}
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.demo
            properties:
                num_streams:
                    constraints:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: 1
                              - constraints: []
                                description: ""
                                value: 10
                            location: ""
                            name: in_range
                            path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].properties["num_streams"]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: Requested packet volume expressed in number of packets
                        received per 10 second interval.
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: num_streams
                        location: ""
                        name: get_input
                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].properties["num_streams"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.honeycomb
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.FirewallDemo:
                    metadata: {}
                cci.nodes.Root:
                    metadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD92tTaTQJqKN5Db7ZxF4sbt
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
    _1aVBD51xlKJDuMjnbqzTc87iPUj:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_project_id:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: project_id
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_project_id"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: binding
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/port/create.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: link
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
                                ip_address:
                                    attributeName: ip_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
                                mac_address:
                                    attributeName: mac_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/port/delete.sh
                            inputs:
                                os_port_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_port_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_sink.firewall__flavors__packet_sink_function_service.yaml.protected_port
            properties:
                name:
                    constraints: []
                    description: ""
                    value: protected_packet_sink_port
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Bindable
                name: binding
                nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.protected_port"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network association relationship
                        between Port and Compute node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.BindsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.5
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: link
                nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__packet_sink_function_service.yaml.protected_port"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
            types:
                os.nodes.Port:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: binding
                description: This type represents a network association relationship
                    between Port and Compute node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: binding
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.BindsTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.5
                            normative: "true"
            targetID: _1aVBD07z2EqiAAnHcDg5vEpFrCt
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: link
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBDAwy0aI6X3oVaXE1jDX3G6r
    _1aVBD92tTaTQJqKN5Db7ZxF4sbt:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/honeycomb/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/honeycomb/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Honeycomb Software
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.cci.nodes.Honeycomb.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.honeycomb
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.linux_route
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].relationship.artifacts["start"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].relationship.artifacts["start"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.Honeycomb:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDBSH2S9CuUzm2RnAbWSa152
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
    _1aVBD663PGeHGExcKCPjigVNbL2:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_project_id:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: project_id
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_project_id"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: binding
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/port/create.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: link
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.unprotected_port
                                ip_address:
                                    attributeName: ip_address
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.unprotected_port
                                mac_address:
                                    attributeName: mac_address
                                    capabilityName: ""
                                    nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.unprotected_port
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/port/delete.sh
                            inputs:
                                os_port_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_port_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: firewall.firewall__flavors__firewall_function_service.yaml.unprotected_port
            properties:
                name:
                    constraints: []
                    description: ""
                    value: unprotected_firewall_port
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Bindable
                name: binding
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.firewall_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.unprotected_port"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network association relationship
                        between Port and Compute node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.BindsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.5
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: link
                nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__firewall_function_service.yaml.unprotected_port"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
            types:
                os.nodes.Port:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: binding
                description: This type represents a network association relationship
                    between Port and Compute node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: binding
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.BindsTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.5
                            normative: "true"
            targetID: _1aVBD5jt8RkA5ZJPAKgNTTtI8Bl
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: link
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD1fKEPnTlggXnm1E3AGnKvf
    _1aVBDAE9ffFr1BEascVFErP2C8I:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                route_target:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.RouteTarget:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: network
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: network
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/subnet/create.sh
                            inputs:
                                os_subnet_cidr:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: cidr
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_cidr"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_enable_dhcp:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: enable_dhcp
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_enable_dhcp"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_subnet_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: network
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_subnet_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.subnet
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/subnet/delete.sh
                            inputs:
                                os_subnet_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Subnet"].interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_subnet_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: protected_network.firewall__flavors__network_service.yaml.subnet
            properties:
                cidr:
                    constraints: []
                    description: ""
                    value: 192.168.10.0/24
                enable_dhcp:
                    constraints: []
                    description: ""
                    value: true
                name:
                    constraints: []
                    description: ""
                    value: protected_network
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: network
                nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Subnet:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: network
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDAwy0aI6X3oVaXE1jDX3G6r
    _1aVBDAwy0aI6X3oVaXE1jDX3G6r:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                link:
                    attributes: {}
                    description: A node type that includes the Linkable capability
                        indicates that it can be pointed by tosca.relationships.network.LinksTo
                        relationship type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Linkable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.3
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/network/create.sh
                            inputs:
                                os_network_admin_state_up:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: admin_state_up
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_admin_state_up"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_network_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.network
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/network/delete.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: protected_network.firewall__flavors__network_service.yaml.network
            properties:
                admin_state_up:
                    constraints: []
                    description: ""
                    value: true
                name:
                    constraints: []
                    description: ""
                    value: protected_network
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: cloud
                nodeTemplateName: ""
                nodeTemplatePropertyConstraints:
                    region_name:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                map:
                                    get_input:
                                        constraints: []
                                        description: ""
                                        value: region_name
                            location: ""
                            name: equal
                            path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.requirements[0].targetnodefilter.propertyfilters[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                nodeTypeName: os.nodes.Cloud
                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].relationship.artifacts["Configure"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Network:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
    _1aVBDBSH2S9CuUzm2RnAbWSa152:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/vpp_route/create.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: Static route configured on a linux host
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: common/artifacts/run_remote.sh
                            inputs:
                                destination_network:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: cidr
                                          - constraints: []
                                            description: ""
                                            value: destination
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["destination_network"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                gateway_ip:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: gateway
                                          - constraints: []
                                            description: ""
                                            value: ip_address
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["gateway_ip"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                host_ip_address:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: public_address
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: router
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["host_ip_address"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.interfaces["Standard"].operations["create"].inputs["script_file"]
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.linux_route
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.pg
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Router
                name: router
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"]
                relationship: null
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.Forwarder
                name: gateway
                nodeTemplateName: firewall.firewall__flavors__firewall_function_service.yaml.unprotected_port
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Port
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"]
                relationship: null
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: cci.capabilities.RouteTarget
                name: destination
                nodeTemplateName: protected_network.firewall__flavors__network_service.yaml.subnet
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Subnet
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"]
                relationship: null
            types:
                cci.nodes.LinuxRoute:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDBdEFGXvmcQp6zJrZ69s3l8
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: router
                description: ""
                interfaces: {}
                name: router
                properties: {}
                types: {}
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: forwarder
                description: ""
                interfaces: {}
                name: gateway
                properties: {}
                types: {}
            targetID: _1aVBD663PGeHGExcKCPjigVNbL2
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes: {}
                capability: route_target
                description: ""
                interfaces: {}
                name: destination
                properties: {}
                types: {}
            targetID: _1aVBDAE9ffFr1BEascVFErP2C8I
    _1aVBDBdEFGXvmcQp6zJrZ69s3l8:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts:
                config:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/packet_generator/config.sh
                    targetPath: ""
                    types: {}
                create:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/packet_generator/create.sh
                    targetPath: ""
                    types: {}
                start:
                    description: ""
                    properties: {}
                    sourcePath: artifacts/packet_generator/start.sh
                    targetPath: ""
                    types: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA SoftwareComponent node represents a generic software
                component that can be managed and run by a TOSCA Compute Node Type.
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        host_ip_address:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: endpoint
                                  - constraints: []
                                    description: ""
                                    value: host
                                  - constraints: []
                                    description: ""
                                    value: ip_address
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.PacketGeneratorSoftware.interfacedefinitions["Standard"].inputdefinitions["host_ip_address"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: config
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.PacketGeneratorSoftware.interfacedefinitions["Standard"].operationdefinitions["configure"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                sink_ip_address:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: target
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: sink
                                          - constraints: []
                                            description: ""
                                            value: ip_address
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.PacketGeneratorSoftware.interfacedefinitions["Standard"].operationdefinitions["configure"].inputdefinitions["sink_ip_address"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: create
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.PacketGeneratorSoftware.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/run_remote.sh
                            inputs:
                                script_file:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: start
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_artifact
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.PacketGeneratorSoftware.interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["script_file"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.pg
            properties: {}
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Node
                name: dependency
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.vpp
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Root
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.artifacts["config"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a general dependency relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Compute
                name: host
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: tosca.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.artifacts["config"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Endpoint
                name: target
                nodeTemplateName: packet_sink.firewall__flavors__packet_sink_function_service.yaml.packet_sink_software
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: cci.nodes.PacketSink
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.artifacts["Configure"].notifications.artifacts["config"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network connection relationship
                        between two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.ConnectsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.4
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                cci.nodes.PacketGeneratorSoftware:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
                tosca.nodes.SoftwareComponent:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.4
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: feature
                description: This type represents a general dependency relationship
                    between two nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: dependency
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBD8Vw7rk2BATG5eEQxLEDRnu
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: host
                description: This type represents a hosting relationship between two
                    nodes.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: host
                properties: {}
                types:
                    tosca.relationships.HostedOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.3
                            normative: "true"
                            role: host
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
    _1aVBDCoonJak64NNk67iUiFfv7u:
        metadata:
            puccini-tosca:
                kind: substitution
                version: "1.0"
        properties:
            properties:
                num_streams:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: num_streams
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[1].propertymappings["num_streams"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                region_name:
                    constraints: []
                    description: ""
                    functionCall:
                        arguments:
                          - constraints: []
                            description: ""
                            value: region_name
                        location: ""
                        name: get_input
                        path: topologytemplate.substitutionmappings[1].propertymappings["region_name"]
                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            substitutionFilter:
              - capabilityPropertyConstraints: {}
                propertyFilterConstraints:
                    flavour_id:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                value: simple
                            location: ""
                            name: equal
                            path: topologytemplate.substitutionmappings[1].substitutionfilter.propertyfilters[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
            type: cci.nodes.PacketGenerator
            typeMetadata: {}
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: capabilityMapping
                    version: "1.0"
            properties:
                capability: router
                capabilityName: router
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: gateway
                requirementName: gateway
            targetID: _1aVBDBSH2S9CuUzm2RnAbWSa152
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: link
                requirementName: unprotected_network
            targetID: _1aVBDEEH7mc9qa233ey0uWfp9hZ
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: target
                requirementName: target
            targetID: _1aVBDBdEFGXvmcQp6zJrZ69s3l8
          - metadata:
                puccini-tosca:
                    kind: requirementMapping
                    version: "1.0"
            properties:
                requirement: destination
                requirementName: destination
            targetID: _1aVBDBSH2S9CuUzm2RnAbWSa152
    _1aVBDEEH7mc9qa233ey0uWfp9hZ:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                forwarder:
                    attributes: {}
                    description: This is the default (root) TOSCA Capability Type
                        definition that all other TOSCA Capability Types derive from.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Forwarder:
                            metadata: {}
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
            description: The TOSCA Root Node Type is the default type that all other
                TOSCA base Node Types derive from. This allows for all TOSCA nodes
                to have a consistent set of features for modeling and management (e.g.,
                consistent definitions for requirements, capabilities and lifecycle
                interfaces).
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_project_id:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: project_id
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_project_id"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: binding
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                  - constraints: []
                                    description: ""
                                    value: binding
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/port/create.sh
                            inputs:
                                os_network_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: link
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_network_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.unprotected_port
                                ip_address:
                                    attributeName: ip_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.unprotected_port
                                mac_address:
                                    attributeName: mac_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.unprotected_port
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/port/delete.sh
                            inputs:
                                os_port_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_port_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: binding
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.cci.nodes.LinuxRoute.requirementdefinitions[2].os.nodes.Port.interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.unprotected_port
            properties:
                name:
                    constraints: []
                    description: ""
                    value: unprotected_packet_generator_port
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Bindable
                name: binding
                nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Compute
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.unprotected_port"].requirements[0]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a network association relationship
                        between Port and Compute node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.BindsTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.5
                                normative: "true"
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.network.Linkable
                name: link
                nodeTemplateName: unprotected_network.firewall__flavors__network_service.yaml.network
                nodeTemplatePropertyConstraints: {}
                nodeTypeName: os.nodes.Network
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.unprotected_port"].requirements[1]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This relationship type represents an association
                        relationship between Port and Network node types.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.DependsOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.2
                                normative: "true"
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
                        tosca.relationships.network.LinksTo:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 8.5.4
                                normative: "true"
            types:
                os.nodes.Port:
                    metadata: {}
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut:
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: binding
                description: This type represents a network association relationship
                    between Port and Compute node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: binding
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.BindsTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.5
                            normative: "true"
            targetID: _1aVBDFOhZagW9mFxEmLhCUngrJS
          - metadata:
                puccini-tosca:
                    kind: relationship
                    version: "1.0"
            properties:
                attributes:
                    state:
                        constraints: []
                        description: The state of the relationship instance.
                        value: initial
                    tosca_id:
                        constraints: []
                        description: A unique identifier of the realized instance
                            of a Relationship Template that derives from any TOSCA
                            normative type.
                        value: null
                    tosca_name:
                        constraints: []
                        description: This attribute reflects the name of the Relationship
                            Template as defined in the TOSCA service template. This
                            name is not unique to the realized instance model of corresponding
                            deployed application as each template in the model can
                            result in one or more instances (e.g., scaled) when orchestrated
                            to a provider environment.
                        value: null
                capability: link
                description: This relationship type represents an association relationship
                    between Port and Network node types.
                interfaces:
                    Configure:
                        description: The lifecycle interfaces define the essential,
                            normative operations that each TOSCA Relationship Types
                            may support.
                        inputs: {}
                        notifications: {}
                        operations:
                            add_source:
                                dependencies: []
                                description: Operation to notify the target node of
                                    a source node which is now available via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            add_target:
                                dependencies: []
                                description: Operation to notify the source node of
                                    a target node being added via a relationship.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_source:
                                dependencies: []
                                description: Operation to post-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            post_configure_target:
                                dependencies: []
                                description: Operation to post-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_source:
                                dependencies: []
                                description: Operation to pre-configure the source
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            pre_configure_target:
                                dependencies: []
                                description: Operation to pre-configure the target
                                    endpoint.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_source:
                                dependencies: []
                                description: Operation to remove the source node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            remove_target:
                                dependencies: []
                                description: Operation to remove a target node.
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                            target_changed:
                                dependencies: []
                                description: Operation to notify source some property
                                    or attribute of the target changed
                                host: ""
                                implementation: ""
                                inputs: {}
                                outputs: {}
                                timeout: -1
                        types:
                            tosca.interfaces.Root:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.3
                                    normative: "true"
                            tosca.interfaces.relationship.Configure:
                                metadata:
                                    citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                    citation_location: 5.8.5
                                    normative: "true"
                name: link
                properties: {}
                types:
                    tosca.relationships.DependsOn:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.2
                            normative: "true"
                    tosca.relationships.Root:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 5.7.1
                            normative: "true"
                    tosca.relationships.network.LinksTo:
                        metadata:
                            citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                            citation_location: 8.5.4
                            normative: "true"
            targetID: _1aVBD1fKEPnTlggXnm1E3AGnKvf
    _1aVBDFOhZagW9mFxEmLhCUngrJS:
        metadata:
            puccini-tosca:
                kind: nodeTemplate
                version: "1.0"
        properties:
            artifacts: {}
            attributes:
                networks:
                    constraints: []
                    description: The list of logical networks assigned to the compute
                        host instance and information about them.
                    value: null
                password:
                    constraints: []
                    description: ""
                    value: null
                ports:
                    constraints: []
                    description: The list of logical ports assigned to the compute
                        host instance and information about them.
                    value: null
                private_address:
                    constraints: []
                    description: The primary private IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                public_address:
                    constraints: []
                    description: The primary public IP address assigned by the cloud
                        provider that applications may use to access the Compute node.
                    value: null
                state:
                    constraints: []
                    description: The state of the node instance.
                    value: initial
                tosca_id:
                    constraints: []
                    description: A unique identifier of the realized instance of a
                        Node Template that derives from any TOSCA normative type.
                    value: null
                tosca_name:
                    constraints: []
                    description: This attribute reflects the name of the Node Template
                        as defined in the TOSCA service template. This name is not
                        unique to the realized instance model of corresponding deployed
                        application as each template in the model can result in one
                        or more instances (e.g., scaled) when orchestrated to a provider
                        environment.
                    value: null
                uuid:
                    constraints: []
                    description: ""
                    value: null
            capabilities:
                binding:
                    attributes: {}
                    description: A node type that includes the Bindable capability
                        indicates that it can be bound to a logical network association
                        via a network port.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.network.Bindable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.14
                                normative: "true"
                endpoint:
                    attributes:
                        ip_address:
                            constraints: []
                            description: 'Note: This is the IP address as propagated
                                up by the associated node''s host (Compute) container.'
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: public_address
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                location: ""
                                name: get_attribute
                                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.capabilities["endpoint"].attributes["ip_address"]
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    description: This is the default TOSCA type that should be used
                        or extended to define a specialized administrator endpoint
                        capability.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        initiator:
                            constraints: []
                            description: The optional indicator of the direction of
                                the connection.
                            value: source
                        network_name:
                            constraints: []
                            description: 'The optional name (or ID) of the network
                                this endpoint should be bound to. network_name: PRIVATE
                                | PUBLIC | <network_name> | <network_id>.'
                            value: PRIVATE
                        port:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                      - constraints: []
                                        description: ""
                                        value: 65535
                                    location: ""
                                    name: in_range
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: The optional port of the endpoint.
                            value: 22
                        protocol:
                            constraints: []
                            description: 'The name of the protocol (i.e., the protocol
                                prefix) that the endpoint accepts (any OSI Layer 4-7
                                protocols). Examples: http, https, ftp, tcp, udp,
                                etc.'
                            value: ssh
                        secure:
                            constraints: []
                            description: Requests for the endpoint to be secure and
                                use credentials supplied on the ConnectsTo relationship.
                            value: true
                    types:
                        tosca.capabilities.Endpoint:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.7
                                normative: "true"
                        tosca.capabilities.Endpoint.Admin:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.9
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                feature:
                    attributes: {}
                    description: The Node capability indicates the base capabilities
                        of a TOSCA Node Type.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        tosca.capabilities.Node:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.2
                                normative: "true"
                                role: feature
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                host:
                    attributes: {}
                    description: The Compute capability, when included on a Node Type
                        or Template definition, indicates that the node can provide
                        hosting on a named compute resource.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        disk_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of the local disk available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 20000000000
                                $string: 20000000000 B
                                originalString: 20 GB
                                scalar: 20
                                unit: GB
                        mem_size:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value:
                                            $number: 0
                                            $string: 0 B
                                            originalString: 0 MB
                                            scalar: 0
                                            unit: MB
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Size of memory available to applications
                                running on the Compute node (default unit is MB).
                            value:
                                $number: 4294967296
                                $string: 4294967296 B
                                originalString: 4096 MiB
                                scalar: 4096
                                unit: MiB
                        num_cpus:
                            constraints:
                              - constraints: []
                                description: ""
                                functionCall:
                                    arguments:
                                      - constraints: []
                                        description: ""
                                        value: 1
                                    location: ""
                                    name: greater_or_equal
                                    path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"].notifications.inputs
                                    url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            description: Number of (actual or virtual) CPUs associated
                                with the Compute node.
                            value: 1
                    types:
                        tosca.capabilities.Compute:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.3
                                normative: "true"
                                role: host
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                os:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express an Operating System capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        architecture:
                            constraints: []
                            description: 'The Operating System (OS) architecture.
                                Examples of valid values include: x86_32, x86_64,
                                etc.'
                            value: x86_64
                        distribution:
                            constraints: []
                            description: 'The Operating System (OS) distribution.
                                Examples of valid values for a "type" of "Linux" would
                                include: debian, fedora, rhel and ubuntu.'
                            value: ubuntu
                        type:
                            constraints: []
                            description: 'The Operating System (OS) type. Examples
                                of valid values include: linux, aix, mac, windows,
                                etc.'
                            value: linux
                        version:
                            constraints: []
                            description: The Operating System version.
                            value:
                                $string: "18.04"
                                build: 0
                                fix: 0
                                major: 18
                                minor: 4
                                originalString: "18.04"
                                qualifier: ""
                    types:
                        tosca.capabilities.OperatingSystem:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.12
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                router:
                    attributes: {}
                    description: The Container capability, when included on a Node
                        Type or Template definition, indicates that the node can act
                        as a container for (or a host for) one or more other declared
                        Node Types.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties: {}
                    types:
                        cci.capabilities.Router:
                            metadata: {}
                        tosca.capabilities.Container:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.6
                                normative: "true"
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                scalable:
                    attributes: {}
                    description: This is the default TOSCA type that should be used
                        to express a scalability capability for a node.
                    maxRelationshipCount: -1
                    minRelationshipCount: 0
                    properties:
                        max_instances:
                            constraints: []
                            description: This property is used to indicate the maximum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                        min_instances:
                            constraints: []
                            description: This property is used to indicate the minimum
                                number of instances that should be created for the
                                associated TOSCA Node Template by a TOSCA orchestrator.
                            value: 1
                    types:
                        tosca.capabilities.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.1
                                normative: "true"
                        tosca.capabilities.Scalable:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.5.13
                                normative: "true"
            description: Openstack Compute node
            directives: []
            interfaces:
                Configure:
                    description: The lifecycle interfaces define the essential, normative
                        operations that each TOSCA Relationship Types may support.
                    inputs: {}
                    notifications: {}
                    operations:
                        add_source:
                            dependencies: []
                            description: Operation to notify the target node of a
                                source node which is now available via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        add_target:
                            dependencies: []
                            description: Operation to notify the source node of a
                                target node being added via a relationship.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_source:
                            dependencies: []
                            description: Operation to post-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        post_configure_target:
                            dependencies: []
                            description: Operation to post-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_source:
                            dependencies: []
                            description: Operation to pre-configure the source endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        pre_configure_target:
                            dependencies: []
                            description: Operation to pre-configure the target endpoint.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_source:
                            dependencies: []
                            description: Operation to remove the source node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        remove_target:
                            dependencies: []
                            description: Operation to remove a target node.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        target_changed:
                            dependencies: []
                            description: Operation to notify source some property
                                or attribute of the target changed
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.relationship.Configure:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.5
                                normative: "true"
                Standard:
                    description: This lifecycle interface defines the essential, normative
                        operations that TOSCA nodes may support.
                    inputs:
                        os_auth_url:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: auth_url
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_auth_url"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_password:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: password
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_password"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_region_name:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: region_name
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_region_name"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                        os_username:
                            constraints: []
                            description: ""
                            functionCall:
                                arguments:
                                  - constraints: []
                                    description: ""
                                    value: cloud
                                  - constraints: []
                                    description: ""
                                    value: SELF
                                  - constraints: []
                                    description: ""
                                    value: username
                                location: ""
                                name: get_property
                                path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].inputdefinitions["os_username"].value
                                url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                    notifications: {}
                    operations:
                        configure:
                            dependencies: []
                            description: Standard lifecycle configure operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                        create:
                            dependencies: []
                            description: Standard lifecycle create operation.
                            host: ""
                            implementation: artifacts/compute/create.sh
                            inputs:
                                architecture:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: architecture
                                          - constraints: []
                                            description: ""
                                            value: os
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["architecture"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                cpu_frequency:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: host
                                          - constraints: []
                                            description: ""
                                            value: cpu_frequency
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["cpu_frequency"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                disk_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: disk_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["disk_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                distribution:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: distribution
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["distribution"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                mem_size:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: mem_size
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["mem_size"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                num_cpus:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: num_cpus
                                          - constraints: []
                                            description: ""
                                            value: host
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["num_cpus"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                server_name:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: name
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["server_name"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                type:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: type
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["type"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                                version:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                          - constraints: []
                                            description: ""
                                            value: os
                                          - constraints: []
                                            description: ""
                                            value: version
                                        location: ""
                                        name: get_property
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["create"].inputdefinitions["version"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                adminPass:
                                    attributeName: password
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                                id:
                                    attributeName: uuid
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                            timeout: -1
                        delete:
                            dependencies: []
                            description: Standard lifecycle delete operation.
                            host: ""
                            implementation: artifacts/compute/delete.sh
                            inputs:
                                os_server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["delete"].inputdefinitions["os_server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs: {}
                            timeout: -1
                        start:
                            dependencies: []
                            description: Standard lifecycle start operation.
                            host: ""
                            implementation: artifacts/compute/start.sh
                            inputs:
                                server_id:
                                    constraints: []
                                    description: ""
                                    functionCall:
                                        arguments:
                                          - constraints: []
                                            description: ""
                                            value: uuid
                                          - constraints: []
                                            description: ""
                                            value: SELF
                                        location: ""
                                        name: get_attribute
                                        path: topologytemplate.nodetemplates["firewall__flavors__network_service.yaml.subnet"].requirements[0].targetnodetemplate.os.nodes.Network.requirementdefinitions[0].os.nodes.Cloud.capabilitydefinitions["host"].validsourcenodetypes["os.nodes.Compute"].interfacedefinitions["Standard"].operationdefinitions["start"].inputdefinitions["server_id"].value
                                        url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                            outputs:
                                accessIPv4:
                                    attributeName: public_address
                                    capabilityName: ""
                                    nodeTemplateName: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
                            timeout: -1
                        stop:
                            dependencies: []
                            description: Standard lifecycle stop operation.
                            host: ""
                            implementation: ""
                            inputs: {}
                            outputs: {}
                            timeout: -1
                    types:
                        tosca.interfaces.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.3
                                normative: "true"
                        tosca.interfaces.node.lifecycle.Standard:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.8.4
                                normative: "true"
            name: packet_generator.firewall__flavors__packet_generator_function_service.yaml.packet_generator_host
            properties:
                name:
                    constraints: []
                    description: ""
                    value: packet_generator
            requirements:
              - capabilityName: ""
                capabilityPropertyConstraints: {}
                capabilityTypeName: tosca.capabilities.Container
                name: cloud
                nodeTemplateName: ""
                nodeTemplatePropertyConstraints:
                    region_name:
                      - constraints: []
                        description: ""
                        functionCall:
                            arguments:
                              - constraints: []
                                description: ""
                                map:
                                    get_input:
                                        constraints: []
                                        description: ""
                                        value: region_name
                            location: ""
                            name: equal
                            path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"].notifications.inputs[0]
                            url: zip:file:C:\Users\rajee\git\tosca-models\firewall1.csar!/firewall/firewall_service.yaml
                nodeTypeName: os.nodes.Cloud
                path: topologytemplate.nodetemplates["firewall__flavors__packet_generator_function_service.yaml.demo"].requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].targetnodetemplate.requirements[0].relationship.artifacts["Configure"]
                relationship:
                    attributes:
                        state:
                            constraints: []
                            description: The state of the relationship instance.
                            value: initial
                        tosca_id:
                            constraints: []
                            description: A unique identifier of the realized instance
                                of a Relationship Template that derives from any TOSCA
                                normative type.
                            value: null
                        tosca_name:
                            constraints: []
                            description: This attribute reflects the name of the Relationship
                                Template as defined in the TOSCA service template.
                                This name is not unique to the realized instance model
                                of corresponding deployed application as each template
                                in the model can result in one or more instances (e.g.,
                                scaled) when orchestrated to a provider environment.
                            value: null
                    description: This type represents a hosting relationship between
                        two nodes.
                    interfaces:
                        Configure:
                            description: The lifecycle interfaces define the essential,
                                normative operations that each TOSCA Relationship
                                Types may support.
                            inputs: {}
                            notifications: {}
                            operations:
                                add_source:
                                    dependencies: []
                                    description: Operation to notify the target node
                                        of a source node which is now available via
                                        a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                add_target:
                                    dependencies: []
                                    description: Operation to notify the source node
                                        of a target node being added via a relationship.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_source:
                                    dependencies: []
                                    description: Operation to post-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                post_configure_target:
                                    dependencies: []
                                    description: Operation to post-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_source:
                                    dependencies: []
                                    description: Operation to pre-configure the source
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                pre_configure_target:
                                    dependencies: []
                                    description: Operation to pre-configure the target
                                        endpoint.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_source:
                                    dependencies: []
                                    description: Operation to remove the source node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                remove_target:
                                    dependencies: []
                                    description: Operation to remove a target node.
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                                target_changed:
                                    dependencies: []
                                    description: Operation to notify source some property
                                        or attribute of the target changed
                                    host: ""
                                    implementation: ""
                                    inputs: {}
                                    outputs: {}
                                    timeout: -1
                            types:
                                tosca.interfaces.Root:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.3
                                        normative: "true"
                                tosca.interfaces.relationship.Configure:
                                    metadata:
                                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                        citation_location: 5.8.5
                                        normative: "true"
                    properties: {}
                    types:
                        tosca.relationships.HostedOn:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.3
                                normative: "true"
                                role: host
                        tosca.relationships.Root:
                            metadata:
                                citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                                citation_location: 5.7.1
                                normative: "true"
            types:
                os.nodes.Compute:
                    metadata: {}
                tosca.nodes.Abstract.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.2
                        normative: "true"
                tosca.nodes.Compute:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.3
                        normative: "true"
                tosca.nodes.Root:
                    metadata:
                        citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                        citation_location: 5.9.1
                        normative: "true"
        edgesOut: []
